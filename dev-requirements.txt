# Pip requirements file for development of easy-vault project.
#
# The order of packages is significant, because pip processes them in the order
# of appearance.
#
# Make sure that the minimum versions required in this file are consistent with
# the minimum versions specified in minimum-constraints.txt.


# Direct dependencies:

# pytest
# pytest 5.0.0 has removed support for Python < 3.5
# pytest 4.3.1 solves an issue on Python 3 with minimum package levels
pytest>=4.3.1,<5.0.0; python_version < '3.5'
pytest>=4.3.1; python_version >= '3.5' and python_version <= '3.6'
pytest>=4.4.0; python_version >= '3.7'

testfixtures==6.9.0

# virtualenv
# Virtualenv 20.0.19 has an issue where it does not install pip on Python 3.4.
# Virtualenv 20.0.32 has an issue where it raises AttributeError on Python 3.4.
virtualenv>=14.0.0,!=20.0.19,!=20.0.32; python_version < '3.5'
virtualenv>=16.1.0; python_version >= '3.5' and python_version < '3.8'
virtualenv>=20.0.0; python_version >= '3.8'

# Coverage reporting (no imports, invoked via coveralls script):
# We run the coverage command instead of using the pytest-cov plugin because the
# latter interferes with our own plugin.
# We exclude Python 3.4 from coverage testing and reporting.
# coverage 5.0 has removed support for py34
coverage>=5.0; python_version == '2.7' or python_version >= '3.5'
# coveralls 2.0 has removed support for Python 2.7 and 3.4
git+https://github.com/andy-maier/coveralls-python.git@andy/add-py27#egg=coveralls; python_version == '2.7'
# TODO: Remove coveralls pinning to <3.0.0 once fixed (TheKevJames/coveralls-python#252)
coveralls>=2.1.2,<3.0.0; python_version >= '3.5'

# Safety CI by pyup.io
# safety 1.9.0 removed support for Python 2.7 and 3.4 (and now also enforces that)
safety>=1.8.7,<1.9.0; python_version <= '3.4'
safety>=1.9.0; python_version >= '3.5'
# dparse 0.5.0 has an infinite recursion issue on Python 2.7,
#   see https://github.com/pyupio/dparse/issues/46
# Pip 19.1.1 does not recognize that dparse 0.5.0 has dropped support for Python 3.4
dparse>=0.4.1,<0.5.0; python_version == '2.7'
dparse>=0.4.1,<0.5.0; python_version == '3.4'
dparse>=0.4.1; python_version >= '3.5'

# PyYAML is pulled in by dparse and python-coveralls, and is already covered in
# requirements.txt. For Python 3.4, the pip version used (19.1.1) updates
# PyYAML to 5.3.1 due to using update strategy eager, ignoring that that
# version of PyYAML states not to support Python 3.4. So we repeat the
# requirement, just for Python 3.4. Must stay in sync with requirements.txt.
PyYAML>=5.2,<5.3; python_version == '3.4'

# Sphinx (no imports, invoked via sphinx-build script):
# Keep in sync with rtd-requirements.txt
Sphinx>=1.7.6
sphinx-git>=10.1.1
GitPython>=2.1.1
sphinxcontrib-fulltoc>=1.2.0
sphinxcontrib-websupport>=1.1.2
# Pygments 2.4.0 has removed support for Python 3.4
Pygments>=2.1.3; python_version == '2.7'
Pygments>=2.1.3,<2.4.0; python_version == '3.4'
Pygments>=2.1.3; python_version >= '3.5'
sphinx-rtd-theme>=0.5.0
autodocsumm>=0.1.13,<0.2.0; python_version == '2.7'
autodocsumm>=0.1.13,<0.2.0; python_version == '3.4'
autodocsumm>=0.1.13; python_version >= '3.5'

# PyLint (no imports, invoked via pylint script)
# Pylint requires astroid
# Pylint 1.x / astroid 1.x supports py27 and py34/35/36
# Pylint 2.0 / astroid 2.0 removed py27, added py37
# Pylint 2.4 / astroid 2.3 removed py34
pylint>=1.6.4,<2.0.0; python_version == '2.7'
pylint>=2.2.2,<2.4; python_version == '3.4'
pylint>=2.4.4; python_version >= '3.5'
astroid>=1.4.9,<2.0.0; python_version == '2.7'
astroid>=2.1.0,<2.3; python_version == '3.4'
astroid>=2.3.3; python_version >= '3.5'
# typed-ast is used by astroid on py34..py37
# typed-ast 1.4.0 removed support for Python 3.4.
# typed-ast 1.4.0 removed support for Python 3.4.
typed-ast>=1.3.2,<1.4.0; python_version == '3.4' and implementation_name=='cpython'
typed-ast>=1.4.0,<1.5.0; python_version >= '3.5' and python_version < '3.8' and implementation_name=='cpython'

# Flake8 and dependents (no imports, invoked via flake8 script):
# flake8 3.9.0 has removed support for py34 and pip 19.1.1 on py34 does not deal
# well with its pinned dependencies, so we need to repeat these for py34.
flake8>=3.8.0,<3.9.0; python_version == '3.4'
mccabe>=0.6.0,<0.7.0; python_version == '3.4'
pycodestyle>=2.6.0a1,<2.7.0; python_version == '3.4'
pyflakes>=2.2.0,<2.3.0; python_version == '3.4'
flake8>=3.8.0; python_version != '3.4'
mccabe>=0.6.0; python_version != '3.4'
pycodestyle>=2.6.0; python_version != '3.4'
pyflakes>=2.2.0; python_version != '3.4'
entrypoints>=0.3.0
functools32>=3.2.3.post2; python_version == '2.7'  # technically: python_version < '3.2'

# Twine (no imports, invoked via twine script):
twine>=1.8.1
# readme-renderer 25.0 has removed support for Python 3.4
# readme-renderer 23.0 has made cmarkgfm part of extras (it fails on Cygwin)
readme-renderer>=23.0; python_version == '2.7'
readme-renderer>=23.0,<25.0; python_version == '3.4'
readme-renderer>=23.0; python_version >= '3.5'

# Package dependency management tools (not used by any make rules)
pipdeptree>=2.0.0
pip-check-reqs>=2.0.4,<2.1.1; python_version == '2.7'
pip-check-reqs>=2.0.4; python_version >= '3.4'


# Indirect dependencies with special constraints:

# pluggy (used by pytest)
# Pluggy 0.12.0 has a bug causing pytest plugins to fail loading on py38
pluggy>=0.7.1; python_version >= '2.7' and python_version <= '3.6'
pluggy>=0.13.0; python_version >= '3.7'

# packaging (used by pytest)
packaging>=17.0

# pathlib2 (used by virtualenv on py<3.4 on non-Windows)
pathlib2<3,>=2.3.3; python_version < '3.4' and sys_platform != 'win32'

# pytz (used by TBD)
pytz>=2016.10

# colorama (used by TBD)
# colorama 0.4.0 removed support for Python 3.4
colorama>=0.3.9,<0.4.0; python_version <= '3.4'
colorama>=0.4.0; python_version >= '3.5'

# Additional indirect dependencies are not specified in this file.
